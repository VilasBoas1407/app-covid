{"version":3,"sources":["assets/abrasel/logo.png","assets/people/login.png","components/Header/index.tsx","pages/Home/index.tsx","components/Layout/Input/index.tsx","services/api.ts","pages/Login/index.tsx","pages/Register/index.tsx","components/Layout/InputFeel/index.tsx","pages/User/Details/index.tsx","pages/Dashboard/listItems.js","pages/Dashboard/Title.js","components/Dashboard/Chart/index.js","pages/Dashboard/Chart.js","pages/Dashboard/Users.js","components/Dashboard/Table/index.js","pages/Dashboard/Orders.js","pages/Dashboard/Dashboard.js","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","console","log","Header","className","src","logo","alt","height","width","Home","id","to","Input","props","type","name","placeholder","required","onChange","api","axios","create","baseURL","useStyles","makeStyles","theme","formControl","background","borderRadius","border","padding","fontSize","color","formControl_hasError","borderWidth","borderStyle","borderColor","spanError","fontStyle","selectEmpty","marginTop","spacing","Login","useState","ds_email","ds_senha","formData","setFormData","selectedType","setSelectedType","history","useHistory","classes","event","a","preventDefault","request","method","url","data","then","response","userData","localStorage","setItem","JSON","stringify","token","push","swal","title","text","icon","catch","err","auth","handleInputChange","target","value","Container","component","maxWidth","onSubmit","user","Grid","container","FormControl","variant","InputLabel","htmlFor","Select","native","label","aria-label","Register","companies","setCompanies","selectedCompany","setSelectedCompany","formName","formValidate","all_ok","ds_cpf","ds_nome","ds_cnpj","formValue","setFormValue","ds_senha_confirm","ds_telefone","id_emp","formCompany","setFormCompany","handleRadioChange","valid","message","companyData","useEffect","key","RadioGroup","item","FormControlLabel","control","Radio","checked","TextField","xs","sm","map","company","InputFell","Form","Check","Details","id_usuario","setUserData","ds_usa_epi","ds_epi","ds_possui_epi","sintomas","setSintomas","getItem","id_sintoma","dt_consulta","forEach","s","ds_sintoma","headers","followUp","clear","check","loadSintomas","sysmtomsData","loadUser","parse","params","idUser","validateScreen","onClick","sintoma","InputFeel","addSintoma","ListItem","ListItemIcon","ListItemText","Title","Typography","gutterBottom","children","TChart","useTheme","margin","top","right","bottom","left","dataKey","stroke","palette","secondary","angle","size","position","style","textAnchor","fill","primary","main","dot","Chart","dados","setData","getNPeople","date","array","number","split","reverse","join","undefined","element","unshift","day","employes","dia","Date","setDate","getDate","toLocaleDateString","tokem","usuario","collectData","Fragment","depositContext","flex","Deposits","setTotal","total","substr","getData","TBody","rows","row","Table","TableHead","TableRow","TableCell","TableBody","seeMore","nRows","Orders","createData","setRows","length","i","Object","values","Link","href","Copyright","align","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","backgroundColor","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","React","open","fixedHeightPaper","clsx","login","validateUser","CssBaseline","AppBar","Toolbar","noWrap","IconButton","md","lg","Paper","Box","pt","Routes","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1efd5e80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ede4750.png\";","module.exports = __webpack_public_path__ + \"static/media/login.7b17c987.png\";","import React from 'react';\r\n\r\n\r\nimport logo from '../../assets/abrasel/logo.png';\r\nimport './styles.css';\r\nvar jc = \"text-shadow: -1px -1px hsl(0,100%,50%), 1px 1px hsl(5.4, 100%, 50%), 3px 2px hsl(10.8, 100%, 50%), 5px 3px hsl(16.2, 100%, 50%), 7px 4px hsl(21.6, 100%, 50%), 9px 5px hsl(27, 100%, 50%), 11px 6px hsl(32.4, 100%, 50%), 13px 7px hsl(37.8, 100%, 50%), 14px 8px hsl(43.2, 100%, 50%), 16px 9px hsl(48.6, 100%, 50%), 18px 10px hsl(54, 100%, 50%), 20px 11px hsl(59.4, 100%, 50%), 22px 12px hsl(64.8, 100%, 50%), 23px 13px hsl(70.2, 100%, 50%), 25px 14px hsl(75.6, 100%, 50%), 27px 15px hsl(81, 100%, 50%), 28px 16px hsl(86.4, 100%, 50%), 30px 17px hsl(91.8, 100%, 50%), 32px 18px hsl(97.2, 100%, 50%), 33px 19px hsl(102.6, 100%, 50%), 35px 20px hsl(108, 100%, 50%), 36px 21px hsl(113.4, 100%, 50%), 38px 22px hsl(118.8, 100%, 50%), 39px 23px hsl(124.2, 100%, 50%), 41px 24px hsl(129.6, 100%, 50%), 42px 25px hsl(135, 100%, 50%), 43px 26px hsl(140.4, 100%, 50%), 45px 27px hsl(145.8, 100%, 50%), 46px 28px hsl(151.2, 100%, 50%), 47px 29px hsl(156.6, 100%, 50%), 48px 30px hsl(162, 100%, 50%), 49px 31px hsl(167.4, 100%, 50%), 50px 32px hsl(172.8, 100%, 50%), 51px 33px hsl(178.2, 100%, 50%), 52px 34px hsl(183.6, 100%, 50%), 53px 35px hsl(189, 100%, 50%), 54px 36px hsl(194.4, 100%, 50%), 55px 37px hsl(199.8, 100%, 50%), 55px 38px hsl(205.2, 100%, 50%), 56px 39px hsl(210.6, 100%, 50%), 57px 40px hsl(216, 100%, 50%), 57px 41px hsl(221.4, 100%, 50%), 58px 42px hsl(226.8, 100%, 50%), 58px 43px hsl(232.2, 100%, 50%), 58px 44px hsl(237.6, 100%, 50%), 59px 45px hsl(243, 100%, 50%), 59px 46px hsl(248.4, 100%, 50%), 59px 47px hsl(253.8, 100%, 50%), 59px 48px hsl(259.2, 100%, 50%), 59px 49px hsl(264.6, 100%, 50%), 60px 50px hsl(270, 100%, 50%), 59px 51px hsl(275.4, 100%, 50%), 59px 52px hsl(280.8, 100%, 50%), 59px 53px hsl(286.2, 100%, 50%), 59px 54px hsl(291.6, 100%, 50%), 59px 55px hsl(297, 100%, 50%), 58px 56px hsl(302.4, 100%, 50%), 58px 57px hsl(307.8, 100%, 50%), 58px 58px hsl(313.2, 100%, 50%), 57px 59px hsl(318.6, 100%, 50%), 57px 60px hsl(324, 100%, 50%), 56px 61px hsl(329.4, 100%, 50%), 55px 62px hsl(334.8, 100%, 50%), 55px 63px hsl(340.2, 100%, 50%), 54px 64px hsl(345.6, 100%, 50%), 53px 65px hsl(351, 100%, 50%), 52px 66px hsl(356.4, 100%, 50%), 51px 67px hsl(361.8, 100%, 50%), 50px 68px hsl(367.2, 100%, 50%), 49px 69px hsl(372.6, 100%, 50%), 48px 70px hsl(378, 100%, 50%), 47px 71px hsl(383.4, 100%, 50%), 46px 72px hsl(388.8, 100%, 50%), 45px 73px hsl(394.2, 100%, 50%), 43px 74px hsl(399.6, 100%, 50%), 42px 75px hsl(405, 100%, 50%), 41px 76px hsl(410.4, 100%, 50%), 39px 77px hsl(415.8, 100%, 50%), 38px 78px hsl(421.2, 100%, 50%), 36px 79px hsl(426.6, 100%, 50%), 35px 80px hsl(432, 100%, 50%), 33px 81px hsl(437.4, 100%, 50%), 32px 82px hsl(442.8, 100%, 50%), 30px 83px hsl(448.2, 100%, 50%), 28px 84px hsl(453.6, 100%, 50%), 27px 85px hsl(459, 100%, 50%), 25px 86px hsl(464.4, 100%, 50%), 23px 87px hsl(469.8, 100%, 50%), 22px 88px hsl(475.2, 100%, 50%), 20px 89px hsl(480.6, 100%, 50%), 18px 90px hsl(486, 100%, 50%), 16px 91px hsl(491.4, 100%, 50%), 14px 92px hsl(496.8, 100%, 50%), 13px 93px hsl(502.2, 100%, 50%), 11px 94px hsl(507.6, 100%, 50%), 9px 95px hsl(513, 100%, 50%), 7px 96px hsl(518.4, 100%, 50%), 5px 97px hsl(523.8, 100%, 50%), 3px 98px hsl(529.2, 100%, 50%), 1px 99px hsl(534.6, 100%, 50%), 7px 100px hsl(540, 100%, 50%), -1px 101px hsl(545.4, 100%, 50%), -3px 102px hsl(550.8, 100%, 50%), -5px 103px hsl(556.2, 100%, 50%), -7px 104px hsl(561.6, 100%, 50%), -9px 105px hsl(567, 100%, 50%), -11px 106px hsl(572.4, 100%, 50%), -13px 107px hsl(577.8, 100%, 50%), -14px 108px hsl(583.2, 100%, 50%), -16px 109px hsl(588.6, 100%, 50%), -18px 110px hsl(594, 100%, 50%), -20px 111px hsl(599.4, 100%, 50%), -22px 112px hsl(604.8, 100%, 50%), -23px 113px hsl(610.2, 100%, 50%), -25px 114px hsl(615.6, 100%, 50%), -27px 115px hsl(621, 100%, 50%), -28px 116px hsl(626.4, 100%, 50%), -30px 117px hsl(631.8, 100%, 50%), -32px 118px hsl(637.2, 100%, 50%), -33px 119px hsl(642.6, 100%, 50%), -35px 120px hsl(648, 100%, 50%), -36px 121px hsl(653.4, 100%, 50%), -38px 122px hsl(658.8, 100%, 50%), -39px 123px hsl(664.2, 100%, 50%), -41px 124px hsl(669.6, 100%, 50%), -42px 125px hsl(675, 100%, 50%), -43px 126px hsl(680.4, 100%, 50%), -45px 127px hsl(685.8, 100%, 50%), -46px 128px hsl(691.2, 100%, 50%), -47px 129px hsl(696.6, 100%, 50%), -48px 130px hsl(702, 100%, 50%), -49px 131px hsl(707.4, 100%, 50%), -50px 132px hsl(712.8, 100%, 50%), -51px 133px hsl(718.2, 100%, 50%), -52px 134px hsl(723.6, 100%, 50%), -53px 135px hsl(729, 100%, 50%), -54px 136px hsl(734.4, 100%, 50%), -55px 137px hsl(739.8, 100%, 50%), -55px 138px hsl(745.2, 100%, 50%), -56px 139px hsl(750.6, 100%, 50%), -57px 140px hsl(756, 100%, 50%), -57px 141px hsl(761.4, 100%, 50%), -58px 142px hsl(766.8, 100%, 50%), -58px 143px hsl(772.2, 100%, 50%), -58px 144px hsl(777.6, 100%, 50%), -59px 145px hsl(783, 100%, 50%), -59px 146px hsl(788.4, 100%, 50%), -59px 147px hsl(793.8, 100%, 50%), -59px 148px hsl(799.2, 100%, 50%), -59px 149px hsl(804.6, 100%, 50%), -60px 150px hsl(810, 100%, 50%), -59px 151px hsl(815.4, 100%, 50%), -59px 152px hsl(820.8, 100%, 50%), -59px 153px hsl(826.2, 100%, 50%), -59px 154px hsl(831.6, 100%, 50%), -59px 155px hsl(837, 100%, 50%), -58px 156px hsl(842.4, 100%, 50%), -58px 157px hsl(847.8, 100%, 50%), -58px 158px hsl(853.2, 100%, 50%), -57px 159px hsl(858.6, 100%, 50%), -57px 160px hsl(864, 100%, 50%), -56px 161px hsl(869.4, 100%, 50%), -55px 162px hsl(874.8, 100%, 50%), -55px 163px hsl(880.2, 100%, 50%), -54px 164px hsl(885.6, 100%, 50%), -53px 165px hsl(891, 100%, 50%), -52px 166px hsl(896.4, 100%, 50%), -51px 167px hsl(901.8, 100%, 50%), -50px 168px hsl(907.2, 100%, 50%), -49px 169px hsl(912.6, 100%, 50%), -48px 170px hsl(918, 100%, 50%), -47px 171px hsl(923.4, 100%, 50%), -46px 172px hsl(928.8, 100%, 50%), -45px 173px hsl(934.2, 100%, 50%), -43px 174px hsl(939.6, 100%, 50%), -42px 175px hsl(945, 100%, 50%), -41px 176px hsl(950.4, 100%, 50%), -39px 177px hsl(955.8, 100%, 50%), -38px 178px hsl(961.2, 100%, 50%), -36px 179px hsl(966.6, 100%, 50%), -35px 180px hsl(972, 100%, 50%), -33px 181px hsl(977.4, 100%, 50%), -32px 182px hsl(982.8, 100%, 50%), -30px 183px hsl(988.2, 100%, 50%), -28px 184px hsl(993.6, 100%, 50%), -27px 185px hsl(999, 100%, 50%), -25px 186px hsl(1004.4, 100%, 50%), -23px 187px hsl(1009.8, 100%, 50%), -22px 188px hsl(1015.2, 100%, 50%), -20px 189px hsl(1020.6, 100%, 50%), -18px 190px hsl(1026, 100%, 50%), -16px 191px hsl(1031.4, 100%, 50%), -14px 192px hsl(1036.8, 100%, 50%), -13px 193px hsl(1042.2, 100%, 50%), -11px 194px hsl(1047.6, 100%, 50%), -9px 195px hsl(1053, 100%, 50%), -7px 196px hsl(1058.4, 100%, 50%), -5px 197px hsl(1063.8, 100%, 50%), -3px 198px hsl(1069.2, 100%, 50%), -1px 199px hsl(1074.6, 100%, 50%), -1px 200px hsl(1080, 100%, 50%), 1px 201px hsl(1085.4, 100%, 50%), 3px 202px hsl(1090.8, 100%, 50%), 5px 203px hsl(1096.2, 100%, 50%), 7px 204px hsl(1101.6, 100%, 50%), 9px 205px hsl(1107, 100%, 50%), 11px 206px hsl(1112.4, 100%, 50%), 13px 207px hsl(1117.8, 100%, 50%), 14px 208px hsl(1123.2, 100%, 50%), 16px 209px hsl(1128.6, 100%, 50%), 18px 210px hsl(1134, 100%, 50%), 20px 211px hsl(1139.4, 100%, 50%), 22px 212px hsl(1144.8, 100%, 50%), 23px 213px hsl(1150.2, 100%, 50%), 25px 214px hsl(1155.6, 100%, 50%), 27px 215px hsl(1161, 100%, 50%), 28px 216px hsl(1166.4, 100%, 50%), 30px 217px hsl(1171.8, 100%, 50%), 32px 218px hsl(1177.2, 100%, 50%), 33px 219px hsl(1182.6, 100%, 50%), 35px 220px hsl(1188, 100%, 50%), 36px 221px hsl(1193.4, 100%, 50%), 38px 222px hsl(1198.8, 100%, 50%), 39px 223px hsl(1204.2, 100%, 50%), 41px 224px hsl(1209.6, 100%, 50%), 42px 225px hsl(1215, 100%, 50%), 43px 226px hsl(1220.4, 100%, 50%), 45px 227px hsl(1225.8, 100%, 50%), 46px 228px hsl(1231.2, 100%, 50%), 47px 229px hsl(1236.6, 100%, 50%), 48px 230px hsl(1242, 100%, 50%), 49px 231px hsl(1247.4, 100%, 50%), 50px 232px hsl(1252.8, 100%, 50%), 51px 233px hsl(1258.2, 100%, 50%), 52px 234px hsl(1263.6, 100%, 50%), 53px 235px hsl(1269, 100%, 50%), 54px 236px hsl(1274.4, 100%, 50%), 55px 237px hsl(1279.8, 100%, 50%), 55px 238px hsl(1285.2, 100%, 50%), 56px 239px hsl(1290.6, 100%, 50%), 57px 240px hsl(1296, 100%, 50%), 57px 241px hsl(1301.4, 100%, 50%), 58px 242px hsl(1306.8, 100%, 50%), 58px 243px hsl(1312.2, 100%, 50%), 58px 244px hsl(1317.6, 100%, 50%), 59px 245px hsl(1323, 100%, 50%), 59px 246px hsl(1328.4, 100%, 50%), 59px 247px hsl(1333.8, 100%, 50%), 59px 248px hsl(1339.2, 100%, 50%), 59px 249px hsl(1344.6, 100%, 50%), 60px 250px hsl(1350, 100%, 50%), 59px 251px hsl(1355.4, 100%, 50%), 59px 252px hsl(1360.8, 100%, 50%), 59px 253px hsl(1366.2, 100%, 50%), 59px 254px hsl(1371.6, 100%, 50%), 59px 255px hsl(1377, 100%, 50%), 58px 256px hsl(1382.4, 100%, 50%), 58px 257px hsl(1387.8, 100%, 50%), 58px 258px hsl(1393.2, 100%, 50%), 57px 259px hsl(1398.6, 100%, 50%), 57px 260px hsl(1404, 100%, 50%), 56px 261px hsl(1409.4, 100%, 50%), 55px 262px hsl(1414.8, 100%, 50%), 55px 263px hsl(1420.2, 100%, 50%), 54px 264px hsl(1425.6, 100%, 50%), 53px 265px hsl(1431, 100%, 50%), 52px 266px hsl(1436.4, 100%, 50%), 51px 267px hsl(1441.8, 100%, 50%), 50px 268px hsl(1447.2, 100%, 50%), 49px 269px hsl(1452.6, 100%, 50%), 48px 270px hsl(1458, 100%, 50%), 47px 271px hsl(1463.4, 100%, 50%), 46px 272px hsl(1468.8, 100%, 50%), 45px 273px hsl(1474.2, 100%, 50%), 43px 274px hsl(1479.6, 100%, 50%), 42px 275px hsl(1485, 100%, 50%), 41px 276px hsl(1490.4, 100%, 50%), 39px 277px hsl(1495.8, 100%, 50%), 38px 278px hsl(1501.2, 100%, 50%), 36px 279px hsl(1506.6, 100%, 50%), 35px 280px hsl(1512, 100%, 50%), 33px 281px hsl(1517.4, 100%, 50%), 32px 282px hsl(1522.8, 100%, 50%), 30px 283px hsl(1528.2, 100%, 50%), 28px 284px hsl(1533.6, 100%, 50%), 27px 285px hsl(1539, 100%, 50%), 25px 286px hsl(1544.4, 100%, 50%), 23px 287px hsl(1549.8, 100%, 50%), 22px 288px hsl(1555.2, 100%, 50%), 20px 289px hsl(1560.6, 100%, 50%), 18px 290px hsl(1566, 100%, 50%), 16px 291px hsl(1571.4, 100%, 50%), 14px 292px hsl(1576.8, 100%, 50%), 13px 293px hsl(1582.2, 100%, 50%), 11px 294px hsl(1587.6, 100%, 50%), 9px 295px hsl(1593, 100%, 50%), 7px 296px hsl(1598.4, 100%, 50%), 5px 297px hsl(1603.8, 100%, 50%), 3px 298px hsl(1609.2, 100%, 50%), 1px 299px hsl(1614.6, 100%, 50%), 2px 300px hsl(1620, 100%, 50%), -1px 301px hsl(1625.4, 100%, 50%), -3px 302px hsl(1630.8, 100%, 50%), -5px 303px hsl(1636.2, 100%, 50%), -7px 304px hsl(1641.6, 100%, 50%), -9px 305px hsl(1647, 100%, 50%), -11px 306px hsl(1652.4, 100%, 50%), -13px 307px hsl(1657.8, 100%, 50%), -14px 308px hsl(1663.2, 100%, 50%), -16px 309px hsl(1668.6, 100%, 50%), -18px 310px hsl(1674, 100%, 50%), -20px 311px hsl(1679.4, 100%, 50%), -22px 312px hsl(1684.8, 100%, 50%), -23px 313px hsl(1690.2, 100%, 50%), -25px 314px hsl(1695.6, 100%, 50%), -27px 315px hsl(1701, 100%, 50%), -28px 316px hsl(1706.4, 100%, 50%), -30px 317px hsl(1711.8, 100%, 50%), -32px 318px hsl(1717.2, 100%, 50%), -33px 319px hsl(1722.6, 100%, 50%), -35px 320px hsl(1728, 100%, 50%), -36px 321px hsl(1733.4, 100%, 50%), -38px 322px hsl(1738.8, 100%, 50%), -39px 323px hsl(1744.2, 100%, 50%), -41px 324px hsl(1749.6, 100%, 50%), -42px 325px hsl(1755, 100%, 50%), -43px 326px hsl(1760.4, 100%, 50%), -45px 327px hsl(1765.8, 100%, 50%), -46px 328px hsl(1771.2, 100%, 50%), -47px 329px hsl(1776.6, 100%, 50%), -48px 330px hsl(1782, 100%, 50%), -49px 331px hsl(1787.4, 100%, 50%), -50px 332px hsl(1792.8, 100%, 50%), -51px 333px hsl(1798.2, 100%, 50%), -52px 334px hsl(1803.6, 100%, 50%), -53px 335px hsl(1809, 100%, 50%), -54px 336px hsl(1814.4, 100%, 50%), -55px 337px hsl(1819.8, 100%, 50%), -55px 338px hsl(1825.2, 100%, 50%), -56px 339px hsl(1830.6, 100%, 50%), -57px 340px hsl(1836, 100%, 50%), -57px 341px hsl(1841.4, 100%, 50%), -58px 342px hsl(1846.8, 100%, 50%), -58px 343px hsl(1852.2, 100%, 50%), -58px 344px hsl(1857.6, 100%, 50%), -59px 345px hsl(1863, 100%, 50%), -59px 346px hsl(1868.4, 100%, 50%), -59px 347px hsl(1873.8, 100%, 50%), -59px 348px hsl(1879.2, 100%, 50%), -59px 349px hsl(1884.6, 100%, 50%), -60px 350px hsl(1890, 100%, 50%), -59px 351px hsl(1895.4, 100%, 50%), -59px 352px hsl(1900.8, 100%, 50%), -59px 353px hsl(1906.2, 100%, 50%), -59px 354px hsl(1911.6, 100%, 50%), -59px 355px hsl(1917, 100%, 50%), -58px 356px hsl(1922.4, 100%, 50%), -58px 357px hsl(1927.8, 100%, 50%), -58px 358px hsl(1933.2, 100%, 50%), -57px 359px hsl(1938.6, 100%, 50%), -57px 360px hsl(1944, 100%, 50%), -56px 361px hsl(1949.4, 100%, 50%), -55px 362px hsl(1954.8, 100%, 50%), -55px 363px hsl(1960.2, 100%, 50%), -54px 364px hsl(1965.6, 100%, 50%), -53px 365px hsl(1971, 100%, 50%), -52px 366px hsl(1976.4, 100%, 50%), -51px 367px hsl(1981.8, 100%, 50%), -50px 368px hsl(1987.2, 100%, 50%), -49px 369px hsl(1992.6, 100%, 50%), -48px 370px hsl(1998, 100%, 50%), -47px 371px hsl(2003.4, 100%, 50%), -46px 372px hsl(2008.8, 100%, 50%), -45px 373px hsl(2014.2, 100%, 50%), -43px 374px hsl(2019.6, 100%, 50%), -42px 375px hsl(2025, 100%, 50%), -41px 376px hsl(2030.4, 100%, 50%), -39px 377px hsl(2035.8, 100%, 50%), -38px 378px hsl(2041.2, 100%, 50%), -36px 379px hsl(2046.6, 100%, 50%), -35px 380px hsl(2052, 100%, 50%), -33px 381px hsl(2057.4, 100%, 50%), -32px 382px hsl(2062.8, 100%, 50%), -30px 383px hsl(2068.2, 100%, 50%), -28px 384px hsl(2073.6, 100%, 50%), -27px 385px hsl(2079, 100%, 50%), -25px 386px hsl(2084.4, 100%, 50%), -23px 387px hsl(2089.8, 100%, 50%), -22px 388px hsl(2095.2, 100%, 50%), -20px 389px hsl(2100.6, 100%, 50%), -18px 390px hsl(2106, 100%, 50%), -16px 391px hsl(2111.4, 100%, 50%), -14px 392px hsl(2116.8, 100%, 50%), -13px 393px hsl(2122.2, 100%, 50%), -11px 394px hsl(2127.6, 100%, 50%), -9px 395px hsl(2133, 100%, 50%), -7px 396px hsl(2138.4, 100%, 50%), -5px 397px hsl(2143.8, 100%, 50%), -3px 398px hsl(2149.2, 100%, 50%), -1px 399px hsl(2154.6, 100%, 50%); font-size: 40px;\";\r\nconsole.log(\"%cMade by: %s %s\", jc, 'Jose Santos,','Lucas Vilas Boas.');\r\nconsole.log('https://www.linkedin.com/in/jjoclas/');\r\nconsole.log('https://www.linkedin.com/in/lucas-vilas-boas-l-a348b313a/');\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n        <div className=\"row\">\r\n            <img src={logo} alt=\"covid-icon\" height=\"88px\" width=\"208px\"/>\r\n        </div>\r\n        \r\n    </header>   \r\n    );\r\n};\r\n\r\nexport default Header;","//Parei em 01:00:00\r\n\r\nimport React from 'react';\r\nimport { FiLogIn,FiPlusSquare } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <Header />\r\n                <main>\r\n                    <h1>Ajude sua empresa a combater o COVID-19.</h1>\r\n                    <p>Responda o questiónario diaremente sobre como está se sentindo.</p>\r\n\r\n                    <div className=\"row\">\r\n                        <Link to=\"/login\">\r\n                            <span>\r\n                                <FiLogIn />\r\n                            </span>\r\n                            <strong>Login</strong>\r\n                        </Link>\r\n                        \r\n                        <Link to=\"/create-account\">\r\n                            <span>\r\n                                <FiPlusSquare />\r\n                            </span>\r\n                            <strong>Criar conta</strong>\r\n                        </Link>\r\n                    </div>\r\n                  \r\n                </main> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React  from 'react';\r\n\r\n\r\ninterface InputProps {\r\n    id: string,\r\n    name: string,\r\n    type: string,\r\n    placeholder?: string,\r\n    required?: boolean,\r\n    onChange?: any,\r\n}\r\nconst Input: React.FC<InputProps>   = (props) =>{\r\n    return(\r\n        <input\r\n            type={props.type}\r\n            name={props.name}\r\n            id={props.id}\r\n            placeholder={props.placeholder}\r\n            required={props.required}\r\n            onChange={props.onChange}\r\n        />\r\n    )\r\n};\r\n\r\nexport default Input;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://api-stopcovidabrasel-com-br.umbler.net/'\r\n});\r\n\r\nexport default api;","import React, {useState, ChangeEvent, FormEvent } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nimport swal from 'sweetalert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './styles.css';\r\n\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Layout/Input';\r\n\r\nimport user from '../../assets/people/login.png';\r\n\r\nimport api from '../../services/api'\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      width : '100%',\r\n      background : '#F0F0F5',\r\n      borderRadius : '8px',\r\n      border : 0,\r\n      padding : ' ',\r\n      fontSize : 16,\r\n      color :  '#6C6C80'\r\n    },\r\n    formControl_hasError: {\r\n        border:1,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: '#FF0000',\r\n        width : '100%',\r\n        background : '#F0F0F5',\r\n        borderRadius : '8px',\r\n        fontSize : 16,\r\n    },\r\n    spanError :{\r\n        color: '#FF0000',\r\n        fontSize: 12,\r\n        fontStyle: '#FF0000',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst Login = () => {\r\n\r\n    const[formData,setFormData] = useState({\r\n        ds_email : '',\r\n        ds_senha: ''\r\n    });\r\n\r\n    const[selectedType,setSelectedType] = useState('worker');\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    function handleSelect(event : any){\r\n        setSelectedType(event.target.value); \r\n    }\r\n\r\n    async function SubmitToLogin( event : FormEvent ){\r\n        event.preventDefault();\r\n\r\n        const { ds_email, ds_senha} = formData;\r\n\r\n        if(selectedType === 'worker'){\r\n            api.request({\r\n                method: 'POST',\r\n                url: `/user`,\r\n                data: {\r\n                  ds_email: ds_email,\r\n                  ds_senha : ds_senha\r\n                },\r\n              \r\n              }).then(function(response){\r\n    \r\n                  if(response.data.userData){\r\n    \r\n                    const userData = response.data.userData[0];\r\n    \r\n                    localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n                    localStorage.setItem(\"token\",response.data.token);\r\n    \r\n                    history.push('/user/Details');\r\n                  }\r\n                  else{\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: \"Usuário ou senha inválidos!\",\r\n                        icon: \"error\"\r\n                      });\r\n                  }\r\n              }).catch(function(err){\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: \"Ocorreu um erro interno, favor contatar a administração : \" + err,\r\n                        icon: \"error\"\r\n                      });\r\n              });\r\n        }\r\n        else{\r\n            api.request({\r\n                method: 'POST',\r\n                url: `/company`,\r\n                data: {\r\n                  ds_email: ds_email,\r\n                  ds_senha : ds_senha\r\n                },\r\n              \r\n              }).then(function(response){\r\n    \r\n                  if(response.data.auth){\r\n    \r\n                    const userData = response.data.userData[0];\r\n    \r\n                    localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n                    localStorage.setItem(\"token\",response.data.token);\r\n                    localStorage.setItem(\"loginUser\", \"false\");\r\n                    history.push('/comp/Dashboard');\r\n                  }\r\n                  else{\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: \"Usuário ou senha inválidos!\",\r\n                        icon: \"error\"\r\n                      });\r\n                  }\r\n              }).catch(function(err){\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: \"Ocorreu um erro interno, favor contatar a administração : \" + err,\r\n                        icon: \"error\"\r\n                      });\r\n              });\r\n        }\r\n\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n        const { name, value } = event.target;\r\n        setFormData({...formData, [name]: value});\r\n    }\r\n    \r\n    return(\r\n        <Container component='main' maxWidth='xs' id=\"page-login\">\r\n                            \r\n            <header className='header'>\r\n                <Header /> \r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n            <div className=\"content\">\r\n\r\n                <form onSubmit={SubmitToLogin} className=\"form\">\r\n                    <img src={user} alt=\"Pessoa com cadeado\"  width=\"300px\" height=\"300px\"/>\r\n                    <br/>\r\n                    <h2>Bem Vindo de Volta!</h2>\r\n                    <br/>\r\n                    <br/>\r\n                    <Grid  container spacing={1}>\r\n                             <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Eu sou:</InputLabel>\r\n                                    <Select\r\n                                        native={false}\r\n                                        label=\"Selecione sua empresa:\"\r\n                                        name=\"company\"\r\n                                        onChange={handleSelect}\r\n                                        value={selectedType}\r\n                                    >\r\n                                        <option aria-label=\"Empregado\" value=\"worker\">Funcionário</option>\r\n                                        <option aria-label=\"Empresa\" value=\"company\">Empresa</option>\r\n                                    </Select>\r\n                              </FormControl>\r\n                    </Grid>\r\n                    <br/>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">E-mail</label>\r\n                        <Input type=\"text\" name=\"ds_email\" id=\"ds_email\" required={true} placeholder=\"Digite seu e-mail\" onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Senha</label>\r\n                        <Input type=\"password\" name=\"ds_senha\" id=\"ds_senha\" required={true} placeholder=\"Digite sua senha\" onChange={handleInputChange}/>\r\n                    </div>\r\n                    <button type=\"submit\">\r\n                        Login\r\n                    </button>\r\n                </form>\r\n                    \r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Login;","import React, { useState, useEffect , ChangeEvent,FormEvent } from 'react';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './styles.css';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nimport api from '../../services/api';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      width : '100%',\r\n      background : '#F0F0F5',\r\n      borderRadius : '8px',\r\n      border : 0,\r\n      padding : ' ',\r\n      fontSize : 16,\r\n      color :  '#6C6C80'\r\n    },\r\n    formControl_hasError: {\r\n        border:1,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: '#FF0000',\r\n        width : '100%',\r\n        background : '#F0F0F5',\r\n        borderRadius : '8px',\r\n        fontSize : 16,\r\n    },\r\n    spanError :{\r\n        color: '#FF0000',\r\n        fontSize: 12,\r\n        fontStyle: '#FF0000',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  interface Company {\r\n    id_emp : number,\r\n    ds_email : string,\r\n    ds_senha : string,\r\n    ds_nome : string,\r\n    ds_cnpj : string,\r\n    dt_cadastro : Date\r\n  }\r\nconst Register = () => {\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [companies,setCompanies] = useState([]);\r\n    const [selectedCompany,setSelectedCompany] = useState('');\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        type: 'worker',\r\n        formName : 'Funcionário',\r\n        formValidate : {\r\n            all_ok: true,\r\n            ds_cpf : true,\r\n            ds_email : true,\r\n            ds_senha : true,\r\n            ds_nome : true,\r\n            ds_cnpj : true\r\n        },\r\n    });\r\n\r\n    const [formData,setFormData] = useState({\r\n        ds_email : '',\r\n        ds_senha : '',\r\n        ds_senha_confirm: '',\r\n        ds_nome : '',\r\n        ds_cpf : '',\r\n        ds_telefone :'',\r\n        id_emp : ''\r\n    });\r\n\r\n    const [formCompany,setFormCompany] = useState({\r\n        ds_email : '',\r\n        ds_senha : '',\r\n        ds_senha_confirm: '',\r\n        ds_nome : '',\r\n        ds_cnpj : '',\r\n        ds_telefone :'',\r\n        id_emp : ''\r\n    });\r\n\r\n\r\n    //#region Function Inputs\r\n\r\n    function handleInputChange(event : ChangeEvent<HTMLInputElement>){\r\n        if(formValue.type === 'worker'){\r\n            const { name, value } = event.target;\r\n            setFormData({...formData, [name]: value });\r\n        }\r\n        else{\r\n            const { name, value } = event.target;\r\n            setFormCompany({...formCompany, [name]: value });\r\n        }\r\n    }\r\n\r\n    function handleSelect(event : any){\r\n        setSelectedCompany(event.target.value); \r\n    }\r\n\r\n    function handleRadioChange(event : ChangeEvent<HTMLInputElement>){\r\n        const { value } = event.target;\r\n        let formName = '';\r\n        if(value === 'worker')\r\n            formName = 'Funcionário'\r\n        else\r\n            formName = 'Empresa'\r\n        setFormValue({\r\n            ...formValue,\r\n            type : value,\r\n            formName: formName,\r\n        });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    async function registerUser( event : FormEvent ){\r\n        event.preventDefault();\r\n        let userData = {  \r\n            ds_email : '',\r\n            ds_senha : '',\r\n            ds_nome : '',\r\n            ds_cpf : '',\r\n            ds_telefone :'',\r\n            id_emp : ''\r\n        };\r\n\r\n        userData.ds_email = formData.ds_email;\r\n        userData.ds_senha = formData.ds_senha;\r\n        userData.ds_cpf = formData.ds_cpf;\r\n        userData.ds_nome = formData.ds_nome;\r\n        userData.ds_telefone = formData.ds_telefone;\r\n        userData.id_emp = selectedCompany;\r\n\r\n        //Separar em uma outra função, pois tenho que validar o CPF também, e o e-mail.\r\n        if(userData.ds_senha !== formData.ds_senha_confirm){\r\n            swal({\r\n                title: \"Erro!\",\r\n                text: \"As senhas não batem!\",\r\n                icon: \"error\"\r\n              });\r\n        }  \r\n        else{\r\n            api.request({\r\n                method: 'POST',\r\n                url: `users`,\r\n                data:{\r\n                    userData : userData\r\n                }\r\n            })\r\n            .then(function(response){\r\n                if(response.data.valid){\r\n                    swal({\r\n                        title: \"Sucesso!\",\r\n                        text: \"Usuário Cadastrado com sucesso!\",\r\n                        icon: \"success\"\r\n                      });\r\n                      history.push('/login');\r\n                }   \r\n                else{\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: response.data.message,\r\n                        icon: \"error\"\r\n                      });\r\n                }\r\n            }).catch(function(err){\r\n                swal({\r\n                    title: \"Erro!\",\r\n                    text: err,\r\n                    icon: \"error\"\r\n                  });\r\n            });\r\n        }    \r\n\r\n    }\r\n\r\n    async function registerCompany( event : FormEvent ){\r\n        event.preventDefault();\r\n\r\n        let companyData = {  \r\n            ds_email : '',\r\n            ds_senha : '',\r\n            ds_nome : '',\r\n            ds_cnpj : '',\r\n            ds_telefone :'',\r\n        };\r\n\r\n        companyData.ds_email = formCompany.ds_email;\r\n        companyData.ds_senha = formCompany.ds_senha;\r\n        companyData.ds_cnpj = formCompany.ds_cnpj;\r\n        companyData.ds_nome = formCompany.ds_nome;\r\n        companyData.ds_telefone = formCompany.ds_telefone;\r\n\r\n            \r\n        if(companyData.ds_senha !== formCompany.ds_senha_confirm){\r\n                swal({\r\n                    title: \"Erro!\",\r\n                    text: \"As senhas não batem!\",\r\n                    icon: \"error\"\r\n                });\r\n        }  \r\n        else{\r\n            api.request({\r\n                method: 'POST',\r\n                    url: `companies`,\r\n                    data:{\r\n                        companyData : companyData\r\n                    }\r\n                })\r\n                .then(function(response){\r\n                    if(response.data.valid){\r\n                        swal({\r\n                            title: \"Sucesso!\",\r\n                            text: response.data.message,\r\n                            icon: \"success\"\r\n                        });\r\n                        history.push('/login');\r\n                    }   \r\n                    else{\r\n                        swal({\r\n                            title: \"Erro!\",\r\n                            text: response.data.message,\r\n                            icon: \"error\"\r\n                        });\r\n                    }\r\n                }).catch(function(err){\r\n                    swal({\r\n                        title: \"Erro!\",\r\n                        text: \"Erro:\"+ err,\r\n                        icon: \"error\"\r\n                    });\r\n                });\r\n            }  \r\n    }\r\n\r\n    useEffect(() => {\r\n        api.request({\r\n            method: 'GET',\r\n            url: `/companies`,\r\n        })\r\n        .then(function(response){\r\n            if(response.data.companyData){\r\n                setCompanies(response.data.companyData);\r\n            }   \r\n            else{\r\n                swal({\r\n                    title: \"Erro!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\"\r\n                  });\r\n            }\r\n        }).catch(function(err){});\r\n    },[])\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <Header />\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n                {\r\n                    formValue.type === 'worker' ? (\r\n                        <form onSubmit={registerUser} key=\"user\">\r\n                    <RadioGroup aria-label=\"quiz\" name=\"type\" onChange={handleRadioChange}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <FormControlLabel \r\n                                    value=\"worker\" \r\n                                    control={<Radio />} \r\n                                    label=\"Cadastro Funcionário\"\r\n                                    checked={formValue.type === 'worker'} \r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControlLabel \r\n                                    value=\"company\" \r\n                                    control={<Radio />} \r\n                                    label=\"Cadastro Empresa\"\r\n                                />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    </RadioGroup>\r\n                 <h1> Cadastro de {formValue.formName}</h1>    \r\n                 <br/>\r\n                <legend>                  \r\n                    <h2>\r\n                        Dados\r\n                    </h2>\r\n                    {\r\n                        formValue.formValidate.all_ok !== true ?<span className={classes.spanError}>Por favor, preencha todos os campos</span>: null\r\n                    }\r\n                </legend>\r\n                    <div>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                    label=\"Nome Completo\"\r\n                                    id=\"ds_nome\"\r\n                                    name=\"ds_nome\"\r\n                                    variant=\"outlined\"\r\n                                    className={\r\n                                        formValue.formValidate.ds_cpf === true ?  classes.formControl : classes.formControl_hasError\r\n                                    }\r\n                                    onChange={handleInputChange}\r\n                                    value={formData.ds_nome}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                    label=\"Telefone\"\r\n                                    id=\"ds_telefone\"\r\n                                    name=\"ds_telefone\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"input-form\"\r\n                                    onChange={handleInputChange}\r\n                                    value={formData.ds_telefone}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                    label=\"CPF\"\r\n                                    id=\"ds_cpf\"\r\n                                    name=\"ds_cpf\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"input-form\"\r\n                                    onChange={handleInputChange}\r\n                                    value={formData.ds_cpf}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                    </div>\r\n                    <div>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                        label=\"Email\"\r\n                                        id=\"ds_email\"\r\n                                        name=\"ds_email\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formData.ds_email}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                            <Grid  xs={12} sm={6} item>\r\n                                    <TextField\r\n                                        label=\"Senha\"\r\n                                        id=\"ds_senha\"\r\n                                        name=\"ds_senha\"\r\n                                        type=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formData.ds_senha}\r\n                                    />\r\n                            </Grid>\r\n                            <br/>\r\n                            <br/>\r\n                            <Grid  xs={12} sm={6} item>\r\n                                    <TextField\r\n                                        label=\"Confirme sua Senha\"\r\n                                        id=\"ds_senha_confirm\"\r\n                                        name=\"ds_senha_confirm\"\r\n                                        type=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formData.ds_senha_confirm}\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid  container spacing={3}>\r\n                             <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">Selecione sua empresa:</InputLabel>\r\n                                    <Select\r\n                                        native={false}\r\n                                        label=\"Selecione sua empresa:\"\r\n                                        name=\"company\"\r\n                                        onChange={handleSelect}\r\n                                        value={selectedCompany}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" />\r\n                                        {companies.map(function(company : Company,key){\r\n                                            return <option value={company.id_emp} > {company.ds_nome}</option>\r\n                                        })}\r\n                                    </Select>\r\n                              </FormControl>\r\n                        </Grid>\r\n                    </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"button-confirm\">\r\n                        Criar Conta\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n                    ): (\r\n            <form onSubmit={registerCompany} key=\"company\">\r\n                <RadioGroup aria-label=\"quiz\" name=\"type\" onChange={handleRadioChange}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                value=\"worker\" \r\n                                control={<Radio />} \r\n                                label=\"Cadastro Funcionário\"\r\n                                checked={formValue.type === 'worker'} \r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                value=\"company\" \r\n                                control={<Radio />} \r\n                                label=\"Cadastro Empresa\"\r\n                                checked={formValue.type === 'company'} \r\n                            />\r\n                        </Grid>  \r\n                    </Grid>\r\n                </RadioGroup>\r\n             <h1> Cadastro de {formValue.formName}</h1>    \r\n                <br/>\r\n                <legend>\r\n                    <h2>\r\n                        Dados\r\n                    </h2>\r\n                    {\r\n                        formValue.formValidate.all_ok !== true ?<span className={classes.spanError}>Por favor, preencha todos os campos</span>: null\r\n                    }\r\n                </legend>\r\n                        <Grid container spacing={3}>\r\n                                        <TextField\r\n                                            label=\"Nome Empresa\"\r\n                                            id=\"ds_nome \"\r\n                                            name=\"ds_nome\"\r\n                                            variant=\"outlined\"\r\n                                            className={\r\n                                                formValue.formValidate.ds_cpf === true ?  classes.formControl : classes.formControl_hasError\r\n                                            }\r\n                                            onChange={handleInputChange}\r\n                                            value={formCompany.ds_nome}\r\n                                        />\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                    label=\"Telefone\"\r\n                                    id=\"ds_telefone\"\r\n                                    name=\"ds_telefone\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"input-form\"\r\n                                    onChange={handleInputChange}\r\n                                    value={formCompany.ds_telefone}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                    label=\"CNPJF\"\r\n                                    id=\"ds_cnpj\"\r\n                                    name=\"ds_cnpj\"\r\n                                    variant=\"outlined\"\r\n                                    className=\"input-form\"\r\n                                    onChange={handleInputChange}\r\n                                    value={formCompany.ds_cnpj}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                                <TextField\r\n                                        label=\"Email\"\r\n                                        id=\"ds_email\"\r\n                                        name=\"ds_email\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formCompany.ds_email}\r\n                                />\r\n                        </Grid>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container spacing={3}>\r\n                            <Grid  xs={12} sm={6} item>\r\n                                    <TextField\r\n                                        label=\"Senha\"\r\n                                        id=\"ds_senha\"\r\n                                        name=\"ds_senha\"\r\n                                        type=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formCompany.ds_senha}\r\n                                    />\r\n                            </Grid>\r\n                            <br/>\r\n                            <br/>\r\n                            <Grid  xs={12} sm={6} item>\r\n                                    <TextField\r\n                                        label=\"Confirme sua Senha\"\r\n                                        id=\"ds_senha_confirm\"\r\n                                        name=\"ds_senha_confirm\"\r\n                                        type=\"password\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"input-form\"\r\n                                        onChange={handleInputChange}\r\n                                        value={formCompany.ds_senha_confirm}\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"button-confirm\">\r\n                                Criar Conta\r\n                            </button>\r\n                        </div>\r\n        </form>\r\n                    )\r\n                }\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\ninterface InputProps {\r\n    label : string,\r\n    name: string,\r\n    onChange: any,\r\n    value : string,\r\n    checked: boolean\r\n}\r\n\r\nconst InputFell: React.FC<InputProps> = (props) => {\r\n\r\n    function render() {\r\n       \r\n\r\n        return (\r\n                <Form.Check\r\n                    name={props.name}\r\n                    type=\"checkbox\"\r\n                    id={props.name}\r\n                    className=\"check-box\"\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    checked = {props.checked}\r\n                />\r\n        )\r\n      }\r\n\r\nreturn (\r\n\r\n        <>\r\n            <br/>\r\n            <div className=\"row\">\r\n                {render()}\r\n            </div>\r\n            <br/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default InputFell;","import React,{ useEffect, useState, ChangeEvent, FormEvent } from 'react';  \r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Header from '../../../components/Header';\r\nimport InputFeel from '../../../components/Layout/InputFeel';\r\n\r\nimport api from '../../../services/api';\r\n\r\nimport './styles.css';\r\n\r\ninterface sintoma {\r\n    ds_sintoma : string,\r\n    id_sintoma: number,\r\n    checked : boolean\r\n}\r\nconst Details = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const[userData,setUserData] = useState({\r\n        ds_email : '',\r\n        ds_senha : '',\r\n        ds_nome : '',\r\n        ds_cpf : '',\r\n        ds_telefone :'',\r\n        id_emp : '',\r\n        id_usuario : ''\r\n    });\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        ds_usa_epi : false,\r\n        ds_epi: false,\r\n        ds_possui_epi: false\r\n    });\r\n\r\n    const [sintomas,setSintomas] = useState([]);\r\n\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('userData');\r\n    \r\n    async function handleSubmit( event : FormEvent){\r\n        event.preventDefault();\r\n        var data = {\r\n            id_sintoma : '',\r\n            ds_usa_epi : 0,\r\n            ds_epi: 0,\r\n            ds_possui_epi: 0,\r\n            id_usuario : '',\r\n            dt_consulta : ''\r\n        }\r\n\r\n        sintomas.forEach(function(s: sintoma){\r\n            if(s.checked){\r\n                data.id_sintoma += s.ds_sintoma + \", \"\r\n            }\r\n        });\r\n\r\n        data.ds_epi = formValue.ds_epi ? 1 : 0;\r\n        data.ds_usa_epi = formValue.ds_usa_epi ? 1 : 0;\r\n        data.ds_possui_epi = formValue.ds_possui_epi ? 1 : 0;\r\n        data.id_usuario = userData.id_usuario;\r\n      \r\n\r\n        api.request({\r\n            method : 'POST',\r\n            url : '/followup',\r\n            headers :{\r\n                'x-access-token' : token\r\n            },\r\n            data: {\r\n                followUp: data\r\n            },\r\n        }).then(function(response){\r\n            if(response.data.valid){\r\n                swal({\r\n                    title: \"Obrigado!\",\r\n                    text:\"Sua resposta foi computada com sucesso!\",\r\n                    icon: \"success\",\r\n                })\r\n                .then(() => {\r\n                    localStorage.clear();\r\n                    history.push('/');\r\n                });\r\n            }\r\n            else{\r\n                swal({\r\n                    title: \"Erro!\",\r\n                    text: response.data.message,\r\n                    icon: \"error\"\r\n                });\r\n            }\r\n\r\n        }).catch(function(err){\r\n            swal({\r\n                title: \"Erro!\",\r\n                text: \"Ocorreu um erro interno, favor contatar a administração : \" + err,\r\n                icon: \"error\"\r\n            });\r\n        });\r\n    }\r\n\r\n    function handleRadioChange(event : ChangeEvent<HTMLInputElement>){\r\n        const { value,name } = event.target;\r\n        let check = false;\r\n        \r\n        if(value === \"true\")\r\n            check = true\r\n        setFormValue({\r\n            ...formValue,\r\n            [name] : check\r\n        });\r\n    }\r\n\r\n    function doLogout(){\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    function addSintoma(sintoma : sintoma){\r\n        sintoma.checked = !sintoma.checked;\r\n    }\r\n\r\n    async function loadSintomas(){\r\n        api.request({\r\n            method : 'GET',\r\n            url : '/symptoms',\r\n            headers :{\r\n                'x-access-token' : token\r\n            },\r\n        }).then(function(response){\r\n            setSintomas(response.data.sysmtomsData);\r\n        }).catch(function(err){\r\n            swal({\r\n                title: \"Erro!\",\r\n                text: \"Ocorreu um erro interno, favor contatar a administração : \" + err,\r\n                icon: \"error\"\r\n              });\r\n        })\r\n\r\n    }\r\n    \r\n    function loadUser(value : string){\r\n        const user = JSON.parse(value);\r\n        setUserData(user);\r\n        return user.id_usuario;\r\n    }\r\n    async function validateScreen(){\r\n        var user = localStorage.getItem('userData');\r\n\r\n        if(user){\r\n       \r\n            await loadSintomas();\r\n\r\n            //Busca última resposta do usuário\r\n            \r\n            api.request({\r\n                method : 'GET',\r\n                url : '/lastAnswer',\r\n                headers :{\r\n                    'x-access-token' : token\r\n                },\r\n                params: {\r\n                    idUser: loadUser(user)\r\n                },\r\n            }).then(function(response){\r\n                if(!response.data.valid){\r\n                    swal({\r\n                        title: \"Obrigado!\",\r\n                        text:\"Mas você já respondeu hoje! Volte amanhã\",\r\n                        icon: \"success\",\r\n                    })\r\n                    .then(() => {\r\n                        localStorage.clear();\r\n                        history.push('/');\r\n                    });\r\n                }\r\n\r\n            }).catch(function(err){\r\n                swal({\r\n                    title: \"Erro!\",\r\n                    text: \"Ocorreu um erro interno, favor contatar a administração : \" + err,\r\n                    icon: \"error\"\r\n                });\r\n            });\r\n        }\r\n        else\r\n            history.push('/');\r\n    }\r\n    useEffect(() => {\r\n\r\n        validateScreen();\r\n\r\n    },[]);\r\n    return(\r\n        <div id=\"page-details\">\r\n            <header>\r\n                <Header />\r\n                <button onClick={doLogout}>\r\n                    <FiArrowLeft />\r\n                    Sair\r\n                </button>\r\n            </header>\r\n\r\n            <div className=\"user-data\">\r\n                <h1>Olá, {userData.ds_nome}!</h1>\r\n                <br/>\r\n                {/* <label>Último acesso: 05/07/2020 21:30</label> */}\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label className=\"title\">Preencha o formulário de acordo com o que está sentido hoje :</label>\r\n                <br/>\r\n     \r\n                {sintomas.map(function(sintoma: sintoma){\r\n                    return(\r\n                        <div className=\"field-group\"> \r\n                            <div className=\"check-box row\">\r\n                                <InputFeel label={sintoma.ds_sintoma} name={sintoma.ds_sintoma} onChange={() => addSintoma(sintoma)} value={sintoma.ds_sintoma} checked={sintoma.checked}/>\r\n                                <label>{sintoma.ds_sintoma}</label>\r\n                                <br/>\r\n                            </div>\r\n                      </div>\r\n                    )\r\n                })\r\n                }\r\n\r\n                <br/>\r\n                <label className=\"title\">Em relação a sua empresa:</label>\r\n                <br/>\r\n                <label>Você usa EPI'S na sua empresa?</label>\r\n                <RadioGroup aria-label=\"quiz\" name=\"ds_epi\" onChange={handleRadioChange}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                value={true} \r\n                                control={<Radio />} \r\n                                label=\"Sim\"\r\n                                checked={formValue.ds_epi === true}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                value={false} \r\n                                control={<Radio />} \r\n                                label=\"Não\"\r\n                                checked={formValue.ds_epi === false}\r\n                            />\r\n                        </Grid>  \r\n                    </Grid>\r\n                </RadioGroup>\r\n                <br/>\r\n                <label>Você recebeu EPI'S  da sua empresa  ?</label>\r\n                <RadioGroup aria-label=\"quiz\" name=\"ds_possui_epi\" onChange={handleRadioChange}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                name=\"ds_possui_epi\"\r\n                                value={true} \r\n                                control={<Radio />} \r\n                                label=\"Sim\"\r\n                                checked={formValue.ds_possui_epi === true}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                name=\"ds_possui_epi\"\r\n                                value={false} \r\n                                control={<Radio />} \r\n                                label=\"Não\"\r\n                                checked={formValue.ds_possui_epi === false}\r\n                            />\r\n                        </Grid>  \r\n                    </Grid>\r\n                </RadioGroup>\r\n                <br/>\r\n                <label>Você recebeu treinamento sobre o uso de EPI'S ?</label>\r\n                <RadioGroup aria-label=\"quiz\"  name=\"ds_usa_epi\" onChange={handleRadioChange}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                name=\"ds_usa_epi\"\r\n                                value={true} \r\n                                control={<Radio />} \r\n                                label=\"Sim\"\r\n                                checked={formValue.ds_usa_epi === true}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel \r\n                                name=\"ds_usa_epi\"\r\n                                value={false}  \r\n                                control={<Radio />} \r\n                                label=\"Não\"\r\n                                checked={formValue.ds_usa_epi === false}\r\n                            />\r\n                        </Grid>  \r\n                    </Grid>\r\n                </RadioGroup>\r\n                <br/>\r\n                <button type=\"submit\">\r\n                        Salvar\r\n                    </button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Details;","  \r\nimport React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Funcionários\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nexport default function TChart(props){\r\n    const { data } = props\r\n    const theme = useTheme();\r\n    return(\r\n        <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"day\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              size=\"small\"\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Colaborador c/ sintoma.\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"employes\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n       \r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\n\r\nimport Title from './Title';\r\nimport api from '../../services/api'\r\nimport TChart from '../../components/Dashboard/Chart'\r\nimport { join } from 'path';\r\n\r\n// Generate Sales Data\r\nexport default function Chart() {\r\n  let dados = []\r\n  const [data, setData] = useState([]);\r\n\r\n  async function createData() {\r\n  }\r\n\r\n  async function getNPeople(date,array){\r\n    let number = 0\r\n    date = date.split('-').reverse().join('-')\r\n    if(array != undefined){\r\n      array.forEach(element => {\r\n        let symptom = element.id_sintoma.split(',')\r\n        if(symptom !=''){\r\n          number++\r\n        }\r\n      });\r\n    }\r\n    dados.unshift({day:date,employes:number})\r\n  }\r\n\r\n  async function collectData(){\r\n    for(let dia=0;dia<7;dia++){\r\n      //date transform\r\n      let date = new Date()\r\n      date.setDate(date.getDate() - dia);\r\n      \r\n      date = date.toLocaleDateString().split('/').reverse().join('-')\r\n      const tokem = await localStorage.getItem(\"token\");\r\n      let usuario = await localStorage.getItem(\"userData\")\r\n      \r\n      if(usuario){\r\n        usuario = JSON.parse(usuario)\r\n      }\r\n      \r\n      \r\n      await api.request({\r\n          method: 'GET',\r\n          url: `/followup`,\r\n          params:{\r\n            'dt_consulta': date,\r\n            'id_emp': usuario.id_emp\r\n          },\r\n          headers:{\r\n            'x-access-token': tokem,\r\n          },\r\n          \r\n        }).then(async function(response){\r\n          \r\n          await getNPeople(date,response.data.userData)\r\n        \r\n        }).catch(function(err){}); \r\n    }\r\n    \r\n    setData(dados)\r\n  }\r\n  useEffect(()=>{\r\n    collectData()\r\n  },[]);\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Semana</Title>\r\n      <TChart data={data}/>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useEffect, useState} from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport api from '../../services/api'\r\nimport { get } from 'http';\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  async function getNPeople(array){\r\n    let number = 0\r\n    if(array !== undefined){\r\n      array.forEach(element => {\r\n        let symptom = element.id_sintoma.split(',')\r\n        if(symptom !==''){\r\n          number++\r\n        }\r\n      });\r\n    }\r\n    await setTotal(number)\r\n  }\r\n  const[total, setTotal] = useState(0);\r\n  let day = new Date().toLocaleDateString().substr(0, 10).split('-').reverse().join('/')\r\n  let date = new Date()\r\n    \r\n  date.setDate(date.getDate());\r\n  date = date.toLocaleDateString().split('/').reverse().join('-')\r\n  async function getData(){\r\n    const tokem = await localStorage.getItem(\"token\");\r\n    let usuario = await localStorage.getItem(\"userData\")\r\n    if(usuario){\r\n      usuario = JSON.parse(usuario)\r\n    }\r\n    \r\n    api.request({\r\n      method: 'GET',\r\n      url: `/followup`,\r\n      params:{\r\n        'id_emp': usuario.id_emp,\r\n        'dt_consulta': date\r\n      },\r\n      headers:{\r\n        'x-access-token': tokem,\r\n      },\r\n      \r\n    }).then(async function(response){\r\n      await getNPeople(response.data.userData)\r\n    }).catch(function(err){});\r\n  }\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    getData()\r\n  },[])\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Funcionários com Sintomas</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n       {total}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        {day}\r\n      </Typography>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Table from '@material-ui/core/Table';\r\n\r\nexport default function TBody(props){\r\n    const { rows } = props\r\n\r\n    rows.map(row =>{\r\n    })\r\n    return(\r\n        <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Data</TableCell>\r\n            <TableCell>Nome</TableCell>\r\n            <TableCell>Sintomas</TableCell>\r\n            <TableCell>Telefone</TableCell>\r\n            <TableCell>Utilizou EPI?</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n              <TableRow key={row[0]}>\r\n              <TableCell>{row[1]}</TableCell>\r\n              <TableCell>{row[2]}</TableCell>\r\n              <TableCell>{row[3]}</TableCell>\r\n              <TableCell>{row[4]}</TableCell>\r\n              <TableCell>{row[5]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from './Title';\r\nimport api from '../../services/api'\r\nimport TBody from '../../components/Dashboard/Table'\r\n\r\n// Generate Order Data\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nlet nRows= 0\r\nexport default function Orders() {\r\n  function preventDefault(event) {\r\n    event.preventDefault();\r\n    getData()\r\n  }\r\n    async function getData(){\r\n    const tokem = await localStorage.getItem(\"token\");\r\n    let usuario = await localStorage.getItem(\"userData\")\r\n    if(usuario){\r\n      usuario = JSON.parse(usuario)\r\n    }\r\n    \r\n    api.request({\r\n      method: 'GET',\r\n        url: `/followup`,\r\n        params:{\r\n          'id_emp': usuario.id_emp\r\n        },\r\n        headers:{\r\n          'x-access-token': tokem,\r\n        },\r\n        \r\n      }).then(async function(response){\r\n        \r\n        await createData(response.data.userData)\r\n      }).catch(function(err){        \r\n      });\r\n    }\r\n    const [rows, setRows] = useState([])\r\n    async function createData(array){\r\n      let data = []\r\n      nRows+=5\r\n      //muda nRows de acordo com o tamanho dos dados\r\n      if(array.length<nRows){\r\n        nRows = array.length\r\n      }\r\n      for(let i=0; i<nRows; i++) {\r\n        if(array[i].ds_usa_epi){\r\n          array[i].ds_usa_epi = 'Sim' \r\n        }else{\r\n          array[i].ds_usa_epi = 'Não' \r\n        }\r\n          array[i].dt_consulta = array[i].dt_consulta.substr(0, 10).split('-').reverse().join('/')\r\n        data.push(Object.values(array[i]));\r\n      };\r\n      setRows(data)\r\n      \r\n    }\r\n   \r\n    const classes = useStyles();\r\n    useEffect(()=>{\r\n     getData()\r\n    },[]);\r\n    return (\r\n      <React.Fragment>\r\n      <Title>Funcionarios</Title>\r\n      \r\n        <TBody rows = {rows}/>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          Ver mais\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { mainListItems } from './listItems';\r\nimport Chart from './Chart';\r\nimport User from './Users';\r\nimport Orders from './Orders';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/abrasel/logo.png';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://abrasel.com.br/\">\r\n        Abrasel - Stop Covid-19\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: '#2FB86E'\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100%)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n\r\n  const history = useHistory();\r\n\r\n  function validateUser(){\r\n    const login = localStorage.getItem('loginUser');\r\n\r\n    if(login === true || login === null || login === '')\r\n      history.push('/');\r\n    } \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  \r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n\r\n  function handleLogOut(){\r\n    localStorage.clear();\r\n    history.push('/');\r\n  }\r\n  useEffect(()=>{\r\n    validateUser(); \r\n  },[]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Acompanhamento\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n              <ExitToAppIcon onClick={handleLogOut}/>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n        <img src={logo} alt=\"covid-icon\" height=\"64px\" width=\"208px\"/>\r\n\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          \r\n        </div>\r\n\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n\r\n      </Drawer> */}\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Chart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent User */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <User />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Details from './pages/User/Details';\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route component={Home} path=\"/\" exact/>\r\n            <Route component={Login} path=\"/login\"/>\r\n            <Route component={Register} path=\"/create-account\" />\r\n            <Route component={Details} path=\"/user/Details\"/>\r\n            <Route component={Dashboard} path=\"/comp/Dashboard\"/>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n\r\n\r\n\r\n","// Parei em 36:00\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\nimport Routes from './routes';\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}